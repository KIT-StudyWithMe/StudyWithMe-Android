plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'org.jetbrains.dokka'
}

apply from: "jacoco.gradle"

android {
    compileSdk 31
    buildToolsVersion "33.0.0-rc1"
    jacoco{
         version = "0.8.7"
     }

    defaultConfig {
        applicationId "de.pse.kit.studywithme"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
	release {
		file("../signing.properties").with { propFile ->
			if (propFile.canRead()) {
				def properties = new Properties()
				properties.load(new FileInputStream(propFile))

				storeFile file(properties['keystorePath'])
				storePassword properties['keystorePassword']
				keyAlias properties['keyAlias']
				keyPassword properties['keyPassword']
			} else {
				println 'Unable to read signing.properties'
			}
		}
	}
    }

    buildTypes {
	release {
		signingConfig signingConfigs.release
		minifyEnabled false
		proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
	}
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        //kotlinCompilerVersion '1.5.21'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }
    packagingOptions{
        resources.excludes.add("META-INF/*")
    }
}

dependencies {
    dokkaHtmlPlugin("org.jetbrains.dokka:kotlin-as-java-plugin:1.6.10")
    //firebase
    implementation platform('com.google.firebase:firebase-bom:29.0.4')
    implementation 'com.google.firebase:firebase-auth-ktx'
    // coroutines for firebase
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.0'

    // ktor
    def ktor_version = "1.6.7"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"
    implementation "io.ktor:ktor-client-auth:$ktor_version"
    implementation "ch.qos.logback:logback-classic:1.2.3"

    // serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0"

    // room
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // navigation
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.24.0-alpha"
    implementation "androidx.navigation:navigation-compose:2.4.0-rc01"

    // ViewModels for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.0-alpha01"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation "androidx.compose.material3:material3:1.0.0-alpha04"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    testImplementation 'junit:junit:4.+'
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "io.ktor:ktor-client-mock:$ktor_version"

    androidTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}
/*
task jacocoTestReport(type: JacocoReport, dependsOn: ['test']) {

    reports {
        xml.enabled false
        html.enabled true
        //html.destination "$buildDir/jacocoReport"
    }
}
*/
jacoco {
    toolVersion = "0.8.7"
    //reportsDirectory = layout.buildDirectory.dir('$buildDir/jacocoReport')
}
